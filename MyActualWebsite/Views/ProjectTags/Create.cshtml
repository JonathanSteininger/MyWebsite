@model MyActualWebsite.Models.ProjectTag

@{
    ViewData["Title"] = "Create";
}

<h1 class="text-light">Create</h1>

<h4 class="text-light">ProjectTag</h4>
<hr class="bg-light" />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" class="labels-light inputs-darker">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ProjectKey" class="control-label"></label>
                <select asp-for="ProjectKey" class ="form-control" asp-items="ViewBag.ProjectKey"></select>
            </div>
            <div class="form-group">
                <label asp-for="TagID" class="control-label"></label>
                <select id="TagID" name="TagID" class ="form-control" asp-items="ViewBag.TagID">
                    @{
                        Tag[] tags = ViewData["Tags"] as Tag[];
                        Array.Sort(tags, (a, b) =>
                        {
                            int temp = a.TagCatagoryID.CompareTo(b.TagCatagoryID);
                            if (temp == 0)
                            {
                                return a.TagID.CompareTo(b.TagID);
                            }
                            return temp;
                        });

                        int tagPast = tags[0].TagCatagoryID;
                    }
                    @foreach(Tag cTag in tags)
                    {
                        int Jumpdistacne = 40;
                        int start = (int)(cTag.TagName.Length * 1.5f);

                        if(tagPast != cTag.TagCatagoryID)
                        {
                            tagPast = cTag.TagCatagoryID;
                            <option value="@cTag.TagID" class="mb-2"></option>
                        }
                        <option value="@cTag.TagID" class="mb-2">
                            @cTag.TagName
                            @{for (int i = start; i <= Jumpdistacne; i++)
                            {
                                <text>&nbsp;</text>
                            }}
                            @cTag.TagCatagory.CatagoryName
                            </option>
                    }
                </select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
